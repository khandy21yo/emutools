epl2pdf

DESCRIPTION

This is a partia program to convert an epl2 file info a pdf file.
It is, as yet, incomplete. It is still in development.
But it is capable of handling some simple spl2 files.

It uses popt to handle parsing the command line.
My versions of getopt were just broken when I started this long ago.

It uses the podofo library to handle the PDF utput. This is a poorly
documented package, but it seems to have several necessary
features missing from other libraries.

It uses the zint library to generate the barcodes.
This library containg most, if not all, of the needed barcode
formats necessary to implement the epl2 requirements.

What commands are implemented re only partial at the moment,
missing features as rotation and reverse-image.

Expect bugs, missing sommands, etc.
It is only partiall at the moment.


USAGE

The program is command line driven. It isn't complete yet, so is missing
several features that will be necessary for actual use.

	./epl2pdf source.epl2

This reads in the file 'source.epl2' and, by default, creates
'/tmp/epl2pdf.pdf'. You can change this with the '-o' option.

to run all of the test cases at once, you can use

	./epl2pdf test*.epl2


BUILDING

This uses the "cmake" package to build.
I am using it because it does not seem to break as often as
autoconf/automake does.

It is currently only been tested on Debian/test Linux.
Please let me know if other systems have problems building.

To Build, cd to the source directory and type

	cmake .
	make


KNOWN BUGS

Output file is, by default /tmp/epl2pdf.pdf. If you run this under two different
users, the program will fail due to file permissions. Remove thsise file before
running program under a new user, or specify output using '-o'.

Minimal implmentation of commands. Only some EPL2 commands are handled.

Incomplete implementations. Many features of the implemented operations are not
handled yet.

Do not expect an exact match between the EPL2 output and the PDF
output. There are many differences between them.

EPL2 assumes that things are being created on a black/white bitmap,
which is different than PDFs color vector format. Some things,
like XORing the objects with the background, is not possible.

This program uses a specific font (Courier-Prime) for PDF, and not the
actual EPL2 iembeded fonts. I have not yet found a font that matches the
EPL2 fonts better than this one, which is not that close.
Character shapes and sizes are somewhat different.
'Courier-Prime' just happens to be the bold courier font on my development
machine (Debian/test).

It does not handle download fonts yet.

It does not handle variables (time, counters, variables) yet.

It does not yet handle graphics yet.

It does not handle latge blobs of binary data yet.

Converting from the EPL2 point dimensions to the PDF points can end up
causing slight position and size issues. Objects can vary size and
position by a pixel or two in the conversion.

EPL2 uses the top left of a character for its position, and PDF uses the
bottom left as its position. Currently not handling ascender/descender height.

If you get the error
	terminate called after throwing an instance of 'PoDoFo::PdfError'
then you probably already have a /tmp/epl2pdf.pdf file under another user.
Remove it and try again.

Page size for the PDF image is hardcoded.

Barcodes not fully implemented.

Leaves a blank page at end of prf file.

Barcode human readable text is not in a good place. Don't know why.

The message
	Syntax Warning: Mismatch between font type and embedded font file
has something to do with the way fonts are stored in the PDF file.
It seems to be something about a type1 or a truetype flag in the PDF file.

