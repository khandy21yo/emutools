
	HOW IT WORKS
Converting EPL2 Documents to PDF

INTRODUCTION

	This document describes some of the considerations that need to be
	made in the translation from EPL2 to PDDF.  It probably misses may
	of the finer details, as it is just a rough overvire.

DEFINITIONS

	When the text refers to a "Page", that represents whatever form or
	label used in the printer.

SIZES USED

	This is refering to the size of the units used to position items on
	the page.

	The EPL2 printers are based on pixels, of which there are either 203
	per inch, or optionally 300 per inch, depending on the printer used.
	This progran defaults to 203 because that seems to be how most of the
	printers are configured out of the box.

	PDF printers are based on points (which is a standard size
	in typography, based on the size of a period)  of which there are 72
	per inch.

	So measurements must be adjusted to convert from pixels to points.
	This is done by dividing by 203, then multiplying by 72.

ORIGIN

	This revers to where the (0,0) point is located.

	EPL2 printers place the (0,0) point at the top left of the page.
	Moving to (1,1) moves down one pixel and to the right one pixel.

	PDF places the (0,0) at the bottom left of the page. Moving to
	(1,1) moves up one poit, and to the right one point.

	The horizontal positioning only needs the pixelto point adjustment,
	but vertical position needs the pixel to point conversion, aas well
	as an adjustment to switch the origin from the top to the bottom.

	The vertical position is calculated as
	"(page height) - (EPL_Y * 72 / 203)"

FONTS

	The fonts are the glyphs that are used to display text.

	EPL2 fonts are fixed width bitmaps. The individual glyphs uses
	a two dimensional grid specifing which pixels to paint. They include
	one pixel wide band arount=d the ehtore glyph. The reference point
	for placing the glyph is the top left corner of the glyph. which
	includes the white border pixels.

	PDF fonts are vecter based. This program prefers fixed width fonts,
	such as a Courier font. They usually contain whitespace around the
	glyphs, but are not pixel pased. The reference point is at the
	left of the baseline  of the letters. 

	The widths of the PDF fonts used can also differ from the EPL2 fonts.
	The width of PDF fonts are often wider than the corresponding EPL2
	fonts, which can cause text to extend farther. The -fadjust can be
	used to reduce this problem by scaling the width of the PDF font,
	without changing its height.

	Converting character positions is complicated, and is not made easier
	when rotation is involved

BARCODES

	Barcodes refer to the machine readable codes generated the the "B" and
	"b" commands.

	EPL2 places the reference point at the to left of the symbol.

	PDF places the reference point at the bottom left of the symbol.

	EPL2 allows specifying the width of the bars to be used, byt zint
	does not, so any adjustment must be done by scaling the barcode.

ROTATION AND SCALING

	The EPL2 command set allows for rotation by 0, 90, 180, 270 degrees.

	While rotating, care must be taken to note the difference in the
	reference point from the EPL2 upper left to the PDF lower left 
	position.

	The rotations are handled using a "Transform Matrix" to relocate
	the origin to the proper position, including any rotation and
	scaling requested, and drawing the image based at (0,0) in the
	transform matrix as if it wasn't rotated. After the object is
	completed, the "Transform Matrix" is reverted back to normal.

REVERSE TEXT

	Epl2 can print text in reverse, that is a black background with 
	white text. PDF can display white text, but does not automatically
	add a black background, thus displaying white text on a white
	background

	To handle this, a black rectangle is displayed which covers the
	area behind the text, then paints the white characters on top.

	Adjustments must be made to the position of the bar so that the
	fonts descenters are positioned properly.


FONTS

	epl2pdf can use any system fonts (TrueType or Type-1), but does
	better with monospaced fonts (usually have 'Mono' in the name).

	There are many differences between how the EPL2 fonts work compared
	to how PDF fonts work

		. EPL2 positions characters based on the upper left point
		  of the font, which contains one blank row at the top of
		  the fonts.
		    PDF font characters are positioned at the baseline of
		  the font (the bottom of a M, but lower case letters will
		  cross below the basline).
		- A 10 point EPL2 font size includes the blank rows at the
		  top of the characters, but a 10 point PDF font does not
		  include the blank row, so PDF characters can be taller
		  than EPL2 characters.
		- The EPL2 baseline is

	The height to width size can also be important, but this can be
	adjusted to some extent using the '-s' option.

	Another issue is the whitespace (leading) ath the top of the
	characters. EPL2 has one 'pixel' ath hthe top and bottom of the
	fonts, wheil the TrueType and type-1 may have greater spaging.


GETTING SAMPLE EPL2 FILES

	I would recommend storing your samples in a text file for easier
	editing/reusing for experimenting. Retyping the same command list
	over and over is error prone.

	EPL2 Manual "Eltron Programming Language (EPL) Programming Guide"

		This manual is available on the internet in numerous places.

		You can use a PDF viewer that allows you to cut/paste the
		examples, or simple type them in manually. Don't forget that
		a "P" (page) command is required at the end of the file to
		cause them to print.

	FedEx Server

		Go to the directory

			C:\FedEx\Fedex_LabelBuffer

		The files there are your labels with the name based on the
		tracking number.

